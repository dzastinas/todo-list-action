import io.just.oyu.ProjectVersion
import io.just.oyu.ReleaseVersionTask

apply plugin: 'java-library'

repositories {
    jcenter()
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.1'
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:22.0'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}

ext.versionFile = file('version.properties')

task loadVersion {
    project.version = readVersion()
}

ProjectVersion readVersion() {
    logger.quiet 'Reading the version file.'
    if (!versionFile.exists()) {
        throw new GradleException("Required version file does not exist: $versionFile.canonicalPath")
    }
    Properties versionProps = new Properties()
    versionFile.withInputStream { stream ->
        versionProps.load(stream)
    }
    new ProjectVersion(versionProps.major.toInteger(), versionProps.minor.toInteger(), versionProps.release.toBoolean())
}

task printVersion(group: 'versioning', description: 'Prints project version.') {
    doLast {
        logger.quiet "Version: $version"
    }
}

task makeReleaseVersion(type: ReleaseVersionTask) {
    release = version.release
    destFile = versionFile
}